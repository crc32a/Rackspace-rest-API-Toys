#!/usr/bin/env python

import rackspace.exp.rest.base.util
import rackspace.exp.objs.lbaas
import clientUtils
import json
import sys
import os

util = rackspace.exp.rest.base.util.BaseUtil
printf = util.printf
lbaas = rackspace.exp.objs.lbaas.lbaas
clientUtils.lbaas.headers = clientUtils.xmlHdrs

def usage(prog):
    printf("Usage is %s <lb_id>\n",prog)
    printf("\n")

prog = os.path.basename(sys.argv[0])
if len(sys.argv)<2:
    usage(prog)
    sys.exit()

lid = int(sys.argv[1])
resp = clientUtils.lbaas.getLoadBalancer(lid)
xml = resp.read()

lb = lbaas.CreateFromDocument(xml)

cols = ["name","id","port","protocol","status"]
msg = "lb %s:\n"%(clientUtils.attrStrs(lb,*cols))
sys.stdout.write(msg)
sys.stdout.write("    Vips:\n")
for vip in lb.virtualIps.virtualIp:
    msg = "       %s:\n"%(clientUtils.attrStrs(vip,"id","type","address"))
    sys.stdout.write(msg)
sys.stdout.write("    Nodes:\n")
for node in lb.nodes.node:
    cols = ["id","type","address","type","condition","weight"]
    msg = "       %s\n"%(clientUtils.attrStrs(node,*cols))
    sys.stdout.write(msg)
sys.stdout.write("\n\n")
